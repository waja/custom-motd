#!/bin/sh
# Authors:
#   Mads Chr. Olesen <mads@mchro.dk>
#   Kees Cook <kees@ubuntu.com>
set -e

# poor mans force
if [ "$1" = "--force" ]; then
    NEEDS_FSCK_CHECK=yes
fi

# check time when we did the last check
stamp="/var/lib/update-notifier/fsck-at-reboot"
if [ -e "$stamp" ]; then
    stampt=$(stat -c %Y $stamp)
else
    stampt=0
fi

now=$(date +%s)
if [ $(($stampt + 3600)) -lt $now ] || [ $stampt -gt $now ]; then
    #echo $stampt $now need update 
	NEEDS_FSCK_CHECK=yes
fi

# output something for update-motd
if [ -n "$NEEDS_FSCK_CHECK" ]; then
    > $stamp
    check_occur_any=

    ext_partitions=$(mount | awk '$5 ~ /^ext(2|3|4)$/ { print $1 }')
    for part in $ext_partitions; do
        dumpe2fs_out=$(dumpe2fs -h $part 2>/dev/null)
        mount_count=$(echo "$dumpe2fs_out" | grep "^Mount count:"|cut -d':' -f 2-)
        if [ -z "$mount_count" ]; then mount_count=0; fi
        max_mount_count=$(echo "$dumpe2fs_out" | grep "^Maximum mount count:"|cut -d':' -f 2-)
        if [ -z "$max_mount_count" ]; then max_mount_count=0; fi
        check_interval=$(echo "$dumpe2fs_out" | grep "^Check interval:" | cut -d':' -f 2- | cut -d'(' -f 1)
        if [ -z "$check_interval" ]; then check_interval=0; fi
        next_check_date=$(echo "$dumpe2fs_out" | grep "^Next check after:" | cut -d':' -f 2-)
        if [ -z "$next_check_interval" ]; then next_check_interval=0; fi
        next_check_tstamp=$(date -d "$next_check_date" +%s)

        #echo "next_check_date=\"$next_check_date\" next_check_tstamp=\"$next_check_tstamp\""
        #echo "part=\"$part\" mount_count=\"$mount_count\" / max=\"$max_mount_count\" "

        check_occur=
        # Check based on mount counts?
        if [ "$max_mount_count" -gt 0 -a \
             "$mount_count" -ge "$max_mount_count" ]; then
            check_occur=yes
        fi
        # Check based on time passed?
        if [ "$check_interval" -gt 0 -a \
             "$next_check_tstamp" -lt "$now" ]; then
            check_occur=yes
        fi
        if [ -n "$check_occur" ]; then
            check_occur_any=yes
            echo "*** $part will be checked for errors at next reboot ***" >> $stamp
        fi
    done
    if [ -n "$check_occur_any" ]; then
        echo "" >> $stamp
    fi
fi

# output what we have (either cached or newly generated)
cat $stamp
